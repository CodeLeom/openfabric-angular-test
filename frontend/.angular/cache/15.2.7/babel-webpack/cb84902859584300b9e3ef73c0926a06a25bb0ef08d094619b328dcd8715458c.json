{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddProductComponent = class AddProductComponent {\n  constructor(fb, api, toast) {\n    this.fb = fb;\n    this.api = api;\n    this.toast = toast;\n    this.addProductModal = new EventEmitter();\n    this.loading = false;\n    this.newProductForm = this.fb.group({\n      name: ['', [Validators.required]],\n      price: [0],\n      description: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    event?.preventDefault();\n    this.loading = true;\n    if (this.newProductForm.value.name && this.newProductForm.value.price && this.newProductForm.value.description) {\n      this.api.postProduct(this.newProductForm.value.name, this.newProductForm.value.price, this.newProductForm.value.description).subscribe({\n        next: res => {\n          this.loading = false;\n          this.newProductForm.value.name = \"\";\n          this.newProductForm.value.price = 0;\n          this.newProductForm.value.description = \"\";\n          this.toast.success('Product added successfully!');\n          this.addProductModal.emit();\n        },\n        error: err => {\n          this.loading = false;\n          this.toast.error(err.error.message);\n        }\n      });\n    }\n  }\n  get name() {\n    return this.newProductForm.get('name');\n  }\n  get description() {\n    return this.newProductForm.get('description');\n  }\n};\n__decorate([Output()], AddProductComponent.prototype, \"addProductModal\", void 0);\nAddProductComponent = __decorate([Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})], AddProductComponent);\nexport { AddProductComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC/D,SAAsBC,UAAU,QAAQ,gBAAgB;AAajD,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAE9BC,YACUC,EAAe,EACfC,GAAsB,EACtBC,KAAU;IAFV,OAAE,GAAFF,EAAE;IACF,QAAG,GAAHC,GAAG;IACH,UAAK,GAALC,KAAK;IAGL,oBAAe,GAAG,IAAIP,YAAY,EAAE;IAE9C,YAAO,GAAY,KAAK;IAExB,mBAAc,GAAG,IAAI,CAACK,EAAE,CAACG,KAAK,CAAC;MAC3BC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACjCC,KAAK,EAAE,CAAC,CAAC,CAAC;MACVC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACQ,QAAQ,CAAC;KACxC,CAAC;EAVC;EAaLG,QAAQ;IACNC,KAAK,EAAEC,cAAc,EAAE;IACvB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAG,IAAI,CAACC,cAAc,CAACC,KAAK,CAACT,IAAI,IAAI,IAAI,CAACQ,cAAc,CAACC,KAAK,CAACP,KAAK,IAAI,IAAI,CAACM,cAAc,CAACC,KAAK,CAACN,WAAW,EAAC;MAC5G,IAAI,CAACN,GAAG,CAACa,WAAW,CAAC,IAAI,CAACF,cAAc,CAACC,KAAK,CAACT,IAAI,EAAC,IAAI,CAACQ,cAAc,CAACC,KAAK,CAACP,KAAK,EAAE,IAAI,CAACM,cAAc,CAACC,KAAK,CAACN,WAAW,CAAC,CAC1HQ,SAAS,CAAC;QACTC,IAAI,EAAGC,GAAG,IAAI;UACZ,IAAI,CAACN,OAAO,GAAG,KAAK;UACpB,IAAI,CAACC,cAAc,CAACC,KAAK,CAACT,IAAI,GAAG,EAAE;UACnC,IAAI,CAACQ,cAAc,CAACC,KAAK,CAACP,KAAK,GAAG,CAAC;UACnC,IAAI,CAACM,cAAc,CAACC,KAAK,CAACN,WAAW,GAAG,EAAE;UAC1C,IAAI,CAACL,KAAK,CAACgB,OAAO,CAAC,6BAA6B,CAAC;UACjD,IAAI,CAACC,eAAe,CAACC,IAAI,EAAE;QAC7B,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACf,IAAI,CAACX,OAAO,GAAG,KAAK;UACpB,IAAI,CAACT,KAAK,CAACmB,KAAK,CAACC,GAAG,CAACD,KAAK,CAACE,OAAO,CAAC;QACnC;OACD,CAAC;;EAEN;EAEA,IAAInB,IAAI;IACN,OAAO,IAAI,CAACQ,cAAc,CAACY,GAAG,CAAC,MAAM,CAAC;EACxC;EACA,IAAIjB,WAAW;IACb,OAAO,IAAI,CAACK,cAAc,CAACY,GAAG,CAAC,aAAa,CAAC;EAC/C;CAGD;AAzCWC,YAAT7B,MAAM,EAAE,4DAAsC;AARpCE,mBAAmB,eAL/BJ,SAAS,CAAC;EACTgC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACW9B,mBAAmB,CAiD/B;SAjDYA,mBAAmB","names":["Component","EventEmitter","Output","Validators","AddProductComponent","constructor","fb","api","toast","group","name","required","price","description","onSubmit","event","preventDefault","loading","newProductForm","value","postProduct","subscribe","next","res","success","addProductModal","emit","error","err","message","get","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/leom/Desktop/openfabric-angular-test/frontend/src/app/components/add-product/add-product.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AppServiceService } from 'src/app/service/app-service.service';\n\ntype FormProps = {\n  name: string,\n  description: string\n}\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent {\n  \n  constructor(\n    private fb: FormBuilder,\n    private api: AppServiceService\n    private toast: Hot\n    ) {}\n\n  @Output() addProductModal = new EventEmitter();\n\n  loading: boolean = false;\n\n  newProductForm = this.fb.group({\n      name: ['', [Validators.required]],\n      price: [0],\n      description: ['', [Validators.required]],\n    });\n    \n  \n  onSubmit(){\n    event?.preventDefault();\n    this.loading = true;\n    if(this.newProductForm.value.name && this.newProductForm.value.price && this.newProductForm.value.description){\n      this.api.postProduct(this.newProductForm.value.name,this.newProductForm.value.price, this.newProductForm.value.description)\n      .subscribe({\n        next: (res) => {\n          this.loading = false;\n          this.newProductForm.value.name = \"\" ;\n          this.newProductForm.value.price = 0;\n          this.newProductForm.value.description = \"\";\n          this.toast.success('Product added successfully!')\n          this.addProductModal.emit();\n        },\n        error: (err) => { \n        this.loading = false;\n        this.toast.error(err.error.message);\n        }\n      })\n    }\n  }\n\n  get name(){\n    return this.newProductForm.get('name');\n  }\n  get description(){\n    return this.newProductForm.get('description');\n  }\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}