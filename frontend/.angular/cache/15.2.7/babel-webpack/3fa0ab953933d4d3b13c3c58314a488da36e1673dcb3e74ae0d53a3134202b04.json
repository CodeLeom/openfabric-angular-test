{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductsComponent = class ProductsComponent {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n    this.loading = false;\n    this.displayAddProductModal = false; //display button when user records exists in db\n    this.displayEditProductModal = false;\n    this.displayDeleteProductModal = false;\n  }\n  // products = [\n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" }, \n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" }, \n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" },\n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" }, \n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" },\n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" }\n  // ]\n  // toggle 'add product' modal\n  addProductModal(value) {\n    this.displayAddProductModal = value;\n  }\n  // toggle 'edit product' modal \n  editProductModal(value) {\n    this.displayEditProductModal = value;\n  }\n  // toggle 'delete product' modal\n  showdeleteModal() {}\n  deleteProductModal(id) {}\n  ngOnInit() {\n    this.loading = true;\n    this.localToken = localStorage.getItem('user_token');\n    this.api.getAllProducts().subscribe({\n      next: res => {\n        this.loading = false;\n        this.products = res;\n        console.log(res);\n        this.router.navigate(['/all-products']);\n      },\n      error: () => {\n        this.loading = false;\n        console.log('could not get products');\n      }\n    });\n  }\n};\nProductsComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})], ProductsComponent);\nexport { ProductsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAsC,eAAe;AAWhE,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAU5BC,YACUC,GAAsB,EACtBC,MAAc;IADd,QAAG,GAAHD,GAAG;IACH,WAAM,GAANC,MAAM;IAVhB,YAAO,GAAG,KAAK;IAGf,2BAAsB,GAAY,KAAK,CAAC,CAAC;IACzC,4BAAuB,GAAY,KAAK;IACxC,8BAAyB,GAAY,KAAK;EAMtC;EAIJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACAC,eAAe,CAACC,KAAc;IAC5B,IAAI,CAACC,sBAAsB,GAAGD,KAAK;EACrC;EAED;EACCE,gBAAgB,CAACF,KAAc;IAC7B,IAAI,CAACG,uBAAuB,GAAGH,KAAK;EACtC;EAEA;EACAI,eAAe,IAEf;EACAC,kBAAkB,CAACC,EAAU,GAC7B;EAEAC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAEpD,IAAI,CAACd,GAAG,CAACe,cAAc,EAAE,CAACC,SAAS,CAAC;MAClCC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACP,OAAO,GAAG,KAAK;QACpB,IAAI,CAACQ,QAAQ,GAAGD,GAAG;QACnBE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;QAChB,IAAI,CAACjB,MAAM,CAACqB,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MACzC,CAAC;MACDC,KAAK,EAAE,MAAK;QACV,IAAI,CAACZ,OAAO,GAAG,KAAK;QACpBS,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MAAA;KACxC,CAAC;EAEJ;CAED;AAtEYvB,iBAAiB,eAL7BD,SAAS,CAAC;EACT2B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW5B,iBAAiB,CAsE7B;SAtEYA,iBAAiB","names":["Component","ProductsComponent","constructor","api","router","addProductModal","value","displayAddProductModal","editProductModal","displayEditProductModal","showdeleteModal","deleteProductModal","id","ngOnInit","loading","localToken","localStorage","getItem","getAllProducts","subscribe","next","res","products","console","log","navigate","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/leom/Desktop/openfabric-angular-test/frontend/src/app/components/products/products.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter, OnInit } from '@angular/core';\nimport { AppServiceService } from 'src/app/service/app-service.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n})\nexport class ProductsComponent implements OnInit {\n  products!: any;\n  loading = false;\n  localToken!: string | null;\n  uid!: string;\n  displayAddProductModal: boolean = false; //display button when user records exists in db\n  displayEditProductModal: boolean = false;\n  displayDeleteProductModal: boolean = false;\n\n\n  constructor( \n    private api: AppServiceService,\n    private router: Router\n    ){}\n\n \n\n  // products = [\n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" }, \n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" }, \n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" },\n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" }, \n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" },\n  //   { name: \"Fish hook\", description: \"For baiting and catching fish\"},\n  //   { name: \"Anonymitter\", description: \"The Anonymous identifier\" }\n  // ]\n\n\n\n  // toggle 'add product' modal\n  addProductModal(value: boolean){ \n    this.displayAddProductModal = value;\n  }\n\n // toggle 'edit product' modal \n  editProductModal(value: boolean){\n    this.displayEditProductModal = value;\n  }\n\n  // toggle 'delete product' modal\n  showdeleteModal(){\n    \n  }\n  deleteProductModal(id: string){\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.localToken = localStorage.getItem('user_token')\n\n    this.api.getAllProducts().subscribe({\n      next: (res) => {\n        this.loading = false;\n        this.products = res;\n        console.log(res);\n        this.router.navigate(['/all-products']);\n      },\n      error: () => {\n        this.loading = false;\n        console.log('could not get products')}\n    })\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}