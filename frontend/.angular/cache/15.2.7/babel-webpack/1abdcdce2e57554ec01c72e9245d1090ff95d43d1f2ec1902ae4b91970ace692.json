{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/app-service.service\";\nimport * as i3 from \"@angular/common\";\nfunction UserLoginComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"Email field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserLoginComponent_p_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"Password field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UserLoginComponent {\n  constructor(fb, api) {\n    this.fb = fb;\n    this.api = api;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.value.email && this.loginForm.value.password) {\n      this.api.userlogin(this.loginForm.value.email, this.loginForm.value.password).subscribe({\n        next: res => console.log(res),\n        error: () => console.log('couldn\\'t login')\n      });\n    }\n  }\n  get email() {\n    return this.loginForm.get('email');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n}\nUserLoginComponent.ɵfac = function UserLoginComponent_Factory(t) {\n  return new (t || UserLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AppServiceService));\n};\nUserLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserLoginComponent,\n  selectors: [[\"app-user-login\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[1, \"overlay\"], [\"tabindex\", \"-1\", 1, \"custom-modal\", \"modal-height\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"text-center\"], [1, \"modal-body\"], [1, \"form-body\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-primary\", \"w-100\"], [1, \"bottom-text\"], [\"href\", \"signup\"], [1, \"text-danger\"]],\n  template: function UserLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\", 5);\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function UserLoginComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\")(13, \"input\", 9);\n      i0.ɵɵtemplate(14, UserLoginComponent_p_14_Template, 2, 0, \"p\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\")(19, \"input\", 12);\n      i0.ɵɵtemplate(20, UserLoginComponent_p_20_Template, 2, 0, \"p\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\")(22, \"input\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"p\", 14);\n      i0.ɵɵtext(24, \" Don't have an account? \\u00A0\");\n      i0.ɵɵelementStart(25, \"a\", 15);\n      i0.ɵɵtext(26, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"required\"]);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 716:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(15:5) /Users/leom/Desktop/openfabric-angular-test/frontend/src/app/pages/auth/user-login/user-login.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 13 | \\\\u001b[39m\\\\u001b[33m.modal-body\\\\u001b[39m form\\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m 14 | \\\\u001b[39m    display\\\\u001b[33m:\\\\u001b[39m grid\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 15 | \\\\u001b[39m    row\\\\n \\\\u001b[90m    | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 16 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 17 | \\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[716]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=user-login.component.css.map*/\"]\n});","map":{"version":3,"mappings":"AACA,SAAuBA,UAAU,QAAQ,gBAAgB;;;;;;;ICkB7BC,6BACwB;IAAAA,2CAA2B;IAAAA,iBAAI;;;;;IASvDA,6BACwB;IAAAA,8CAA8B;IAAAA,iBAAI;;;ADrBtF,OAAM,MAAOC,kBAAkB;EAC7BC,YACUC,EAAe,EACfC,GAAsB;IADtB,OAAE,GAAFD,EAAE;IACF,QAAG,GAAHC,GAAG;IAGb,cAAS,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACxBC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAClCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,CAAC;KACrC,CAAC;EALE;EAOJE,QAAQ;IACN,IAAG,IAAI,CAACC,SAAS,CAACC,KAAK,CAACL,KAAK,IAAI,IAAI,CAACI,SAAS,CAACC,KAAK,CAACH,QAAQ,EAAC;MAC7D,IAAI,CAACJ,GAAG,CAACQ,SAAS,CAAC,IAAI,CAACF,SAAS,CAACC,KAAK,CAACL,KAAK,EAAE,IAAI,CAACI,SAAS,CAACC,KAAK,CAACH,QAAQ,CAAC,CAC5EK,SAAS,CAAC;QACTC,IAAI,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAC/BG,KAAK,EAAC,MAAMF,OAAO,CAACC,GAAG,CAAC,iBAAiB;OAC1C,CAAC;;EAEN;EAEA,IAAIX,KAAK;IACP,OAAO,IAAI,CAACI,SAAS,CAACS,GAAG,CAAC,OAAO,CAAC;EACpC;EAEA,IAAIX,QAAQ;IACV,OAAO,IAAI,CAACE,SAAS,CAACS,GAAG,CAAC,UAAU,CAAC;EACvC;;AA3BWlB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/BxB,8BAAqB;MAKuBA,qBAAK;MAAAA,iBAAK;MAEtCA,8BAAwB;MAIpBA;QAAA,OAAYyB,cAAU;MAAA,EAAC;MACnBzB,2BAAK;MACkBA,sBAAK;MAAAA,iBAAQ;MAAAA,sBAAK;MAMrCA,kEACuD;MAC3DA,iBAAM;MACNA,4BAAK;MACqBA,yBAAQ;MAAAA,iBAAQ;MAAAA,sBAAK;MAM3CA,kEAC0D;MAC9DA,iBAAM;MACNA,sBAAK;MAKVA,iBAAO;MAEVA,8BAAuB;MACnBA,+CAA6B;MAAAA,8BAAiB;MAAAA,wBAAO;MAAAA,iBAAI;;;MA/BzDA,eAAuB;MAAvBA,yCAAuB;MAUXA,eAAiC;MAAjCA,gHAAiC;MAUjCA,eAAoC;MAApCA,yHAAoC","names":["Validators","i0","UserLoginComponent","constructor","fb","api","group","email","required","password","onSubmit","loginForm","value","userlogin","subscribe","next","res","console","log","error","get","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/leom/Desktop/openfabric-angular-test/frontend/src/app/pages/auth/user-login/user-login.component.ts","/Users/leom/Desktop/openfabric-angular-test/frontend/src/app/pages/auth/user-login/user-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder , Validators } from '@angular/forms';\nimport { AppServiceService } from 'src/app/service/app-service.service';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent {\n  constructor( \n    private fb: FormBuilder,\n    private api: AppServiceService\n    ){}\n\n  loginForm = this.fb.group({\n    email: ['', [Validators.required]],\n    password: ['', [Validators.required]],\n  });\n\n  onSubmit(){\n    if(this.loginForm.value.email && this.loginForm.value.password){\n      this.api.userlogin(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe({\n        next: (res) => console.log(res),\n        error:() => console.log('couldn\\'t login')\n      })\n    }\n  }\n\n  get email(){\n    return this.loginForm.get('email');\n  }\n\n  get password(){\n    return this.loginForm.get('password');\n  }\n}\n","<div class=\"overlay\">\n    <div class=\"custom-modal modal-height\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h1 class=\"text-center\">Login</h1>\n                </div>\n                <div class=\"modal-body\">\n                   <form \n                    [formGroup]=\"loginForm\" \n                    class=\"form-body\" \n                    (ngSubmit)=\"onSubmit()\">\n                        <div>\n                            <label for=\"email\">Email</label><br/>\n                            <input \n                                type=\"email\" \n                                id=\"email\" \n                                class=\"form-control\"\n                                formControlName=\"email\"/>\n                            <p *ngIf=\"email?.errors?.['required']\" \n                                class=\"text-danger\">Email field cannot be empty</p>\n                        </div>\n                        <div>\n                            <label for=\"password\">Password</label><br/>\n                            <input \n                                type=\"password\" \n                                id=\"password\" \n                                class=\"form-control\"\n                                formControlName=\"password\"/>\n                            <p *ngIf=\"password?.errors?.['required']\" \n                                class=\"text-danger\">Password field cannot be empty</p>\n                        </div>\n                        <br/>\n                        <input \n                            type=\"submit\" \n                            class=\"btn btn-primary w-100\" \n                            value=\"Login\" />\n                   </form>\n                </div>\n                <p class=\"bottom-text\">\n                    Don't have an account? &nbsp;<a href=\"signup\">Sign Up</a>\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}