{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"https://openfabric-backend.onrender.com\";\n    this.httpsOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token.token\n      })\n    };\n  }\n  // User service \n  userlogin(email, password) {\n    return this.http.post(`${this.baseUrl}/api/users/login`, {\n      email,\n      password\n    }, {\n      headers: this.getHeaders()\n    });\n  }\n  userRegistration(name, email, password) {\n    return this.http.post(`${this.baseUrl}/api/users`, {\n      name,\n      email,\n      password\n    });\n  }\n  // products service \n  postProduct(name, description) {\n    return this.http.post(`${this.baseUrl}/api/products`, {\n      name,\n      description\n    });\n  }\n  deleteProduct(id) {\n    return this.http.delete(`${this.baseUrl}/api/products/${id}`);\n  }\n  editProduct(id, name, description) {\n    return this.http.put(`${this.baseUrl}/api/products/${id}`, {\n      name,\n      description\n    });\n  }\n  getSingleProduct(id) {\n    return this.http.get(`${this.baseUrl}/api/products/:id`);\n  }\n  getAllProducts() {\n    return this.http.get(`${this.baseUrl}/api/products`);\n  }\n}\nAppServiceService.ɵfac = function AppServiceService_Factory(t) {\n  return new (t || AppServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nAppServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppServiceService,\n  factory: AppServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,YAAO,GAAG,yCAAyC;IAIzD,iBAAY,GAAG;MACXC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGK,KAAK,CAACA;OACpC;KACF;EARmC;EAcxC;EACAC,SAAS,CAACC,KAAa,EAAEC,QAAgB;IACvC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,kBAAkB,EAAE;MACvDH,KAAK;MACLC;KACD,EAAE;MAACJ,OAAO,EAAE,IAAI,CAACO,UAAU;IAAE,CAAC,CAAC;EAClC;EAEAC,gBAAgB,CAACC,IAAY,EAAEN,KAAa,EAAEC,QAAgB;IAC5D,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,YAAY,EAAE;MACjDG,IAAI;MACJN,KAAK;MACLC;KACD,CAAC;EACJ;EAEA;EACAM,WAAW,CAACD,IAAY,EAAEE,WAAmB;IAC3C,OAAO,IAAI,CAACZ,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,eAAe,EAAE;MACpDG,IAAI;MACJE;KACD,CAAC;EACJ;EAEAC,aAAa,CAACC,EAAU;IACtB,OAAO,IAAI,CAACd,IAAI,CAACe,MAAM,CAAC,GAAG,IAAI,CAACR,OAAO,iBAAiBO,EAAE,EAAE,CAAC;EAC/D;EAEAE,WAAW,CAACF,EAAU,EAAEJ,IAAY,EAAEE,WAAmB;IACvD,OAAO,IAAI,CAACZ,IAAI,CAACiB,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,iBAAiBO,EAAE,EAAE,EAAE;MACzDJ,IAAI;MACJE;KACD,CAAC;EACJ;EAEAM,gBAAgB,CAACJ,EAAU;IACzB,OAAO,IAAI,CAACd,IAAI,CAACmB,GAAG,CAAC,GAAG,IAAI,CAACZ,OAAO,mBAAmB,CAAC;EAC1D;EAEAa,cAAc;IACZ,OAAO,IAAI,CAACpB,IAAI,CAACmB,GAAG,CAAC,GAAG,IAAI,CAACZ,OAAO,eAAe,CAAC;EACtD;;AA1DWT,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAuB,SAAjBvB,iBAAiB;EAAAwB,YAFhB;AAAM","names":["HttpHeaders","AppServiceService","constructor","http","headers","token","userlogin","email","password","post","baseUrl","getHeaders","userRegistration","name","postProduct","description","deleteProduct","id","delete","editProduct","put","getSingleProduct","get","getAllProducts","factory","providedIn"],"sourceRoot":"","sources":["/Users/leom/Desktop/openfabric-angular-test/frontend/src/app/service/app-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppServiceService {\n \n  private baseUrl = \"https://openfabric-backend.onrender.com\"\n  constructor(private http: HttpClient) { }\n\n\n    httpsOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token.token\n        })\n      }\n\n  \n  \n\n\n  // User service \n  userlogin(email: string, password: string){\n    return this.http.post(`${this.baseUrl}/api/users/login`, {\n      email,\n      password\n    }, {headers: this.getHeaders()})\n  };\n\n  userRegistration(name: string, email: string, password: string){\n    return this.http.post(`${this.baseUrl}/api/users`, {\n      name,\n      email,\n      password\n    })\n  }\n\n  // products service \n  postProduct(name: string, description: string){\n    return this.http.post(`${this.baseUrl}/api/products`, {\n      name,\n      description\n    })\n  }\n\n  deleteProduct(id: string){\n    return this.http.delete(`${this.baseUrl}/api/products/${id}`)\n  }\n\n  editProduct(id: string, name: string, description: string){\n    return this.http.put(`${this.baseUrl}/api/products/${id}`, {\n      name,\n      description\n    })\n  }\n\n  getSingleProduct(id: string){\n    return this.http.get(`${this.baseUrl}/api/products/:id`)\n  }\n\n  getAllProducts(){\n    return this.http.get(`${this.baseUrl}/api/products`);\n  }\n\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}