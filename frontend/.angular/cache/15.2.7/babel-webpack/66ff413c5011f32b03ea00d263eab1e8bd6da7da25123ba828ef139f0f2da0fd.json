{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductsComponent = class ProductsComponent {\n  constructor(api, router, toast) {\n    this.api = api;\n    this.router = router;\n    this.toast = toast;\n    this.loading = false;\n    this.displayAddProductModal = false; //display button when user records exists in db\n    this.displayEditProductModal = false;\n    this.displayDeleteProductModal = false;\n  }\n  // toggle 'add product' modal\n  addProductModal(value) {\n    this.displayAddProductModal = value;\n  }\n  // toggle 'edit product' modal \n  showEditModal(id, name, price, description) {\n    this.displayEditProductModal = true;\n    this.p_id = id;\n    this.p_name = name;\n    this.p_price = price;\n    this.p_desc = description;\n  }\n  closeEditModal() {\n    this.displayEditProductModal = false;\n    this.p_id = '';\n    this.p_name = '';\n    this.p_price = 0;\n    this.p_desc = '';\n  }\n  // toggle 'delete product' modal\n  showDeleteModal(id, name) {\n    this.displayDeleteProductModal = true;\n    this.p_id = id;\n    this.p_name = name;\n  }\n  closeDeleteModal() {\n    this.displayDeleteProductModal = false;\n    this.p_id = '';\n    this.p_name = '';\n  }\n  getProducts() {\n    this.api.getAllProducts().subscribe(data => {\n      this.products$ = data;\n      this.loading = false;\n    });\n  }\n  ngOnInit() {\n    this.loading = true;\n    this.localToken = localStorage.getItem('user_token');\n    this.getProducts();\n    this.api.RefreshRequired.subscribe(response => {\n      this.getProducts();\n    });\n  }\n};\nProductsComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})], ProductsComponent);\nexport { ProductsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAiD,eAAe;AAa3E,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAa5BC,YACUC,GAAsB,EACtBC,MAAc,EACdC,KAAsB;IAFtB,QAAG,GAAHF,GAAG;IACH,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IAdf,YAAO,GAAG,KAAK;IAMf,2BAAsB,GAAY,KAAK,CAAC,CAAC;IACzC,4BAAuB,GAAY,KAAK;IACxC,8BAAyB,GAAY,KAAK;EAOtC;EAKJ;EACAC,eAAe,CAACC,KAAc;IAC5B,IAAI,CAACC,sBAAsB,GAAGD,KAAK;EACrC;EAED;EACCE,aAAa,CAACC,EAAU,EAAEC,IAAY,EAAEC,KAAa,EAAEC,WAAmB;IACxE,IAAI,CAACC,uBAAuB,GAAG,IAAI;IACnC,IAAI,CAACC,IAAI,GAAGL,EAAE;IACd,IAAI,CAACM,MAAM,GAAGL,IAAI;IAClB,IAAI,CAACM,OAAO,GAAGL,KAAK;IACpB,IAAI,CAACM,MAAM,GAAGL,WAAW;EAC3B;EACAM,cAAc;IACZ,IAAI,CAACL,uBAAuB,GAAG,KAAK;IACpC,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,MAAM,GAAG,EAAE;EAClB;EAGA;EACAE,eAAe,CAACV,EAAU,EAAEC,IAAY;IACtC,IAAI,CAACU,yBAAyB,GAAG,IAAI;IACrC,IAAI,CAACN,IAAI,GAAGL,EAAE;IACd,IAAI,CAACM,MAAM,GAAGL,IAAI;EACpB;EACAW,gBAAgB;IACd,IAAI,CAACD,yBAAyB,GAAG,KAAK;IACtC,IAAI,CAACN,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,MAAM,GAAG,EAAE;EAClB;EAIAO,WAAW;IACT,IAAI,CAACpB,GAAG,CAACqB,cAAc,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACzC,IAAI,CAACC,SAAS,GAAGD,IAAI;MACrB,IAAI,CAACE,OAAO,GAAG,KAAK;IACtB,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACD,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACE,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAEpD,IAAI,CAACT,WAAW,EAAE;IAClB,IAAI,CAACpB,GAAG,CAAC8B,eAAe,CAACR,SAAS,CAACS,QAAQ,IAAG;MAC5C,IAAI,CAACX,WAAW,EAAE;IACpB,CAAC,CAAC;EAIJ;CAMD;AAnFYtB,iBAAiB,eAL7BD,SAAS,CAAC;EACTmC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWpC,iBAAiB,CAmF7B;SAnFYA,iBAAiB","names":["Component","ProductsComponent","constructor","api","router","toast","addProductModal","value","displayAddProductModal","showEditModal","id","name","price","description","displayEditProductModal","p_id","p_name","p_price","p_desc","closeEditModal","showDeleteModal","displayDeleteProductModal","closeDeleteModal","getProducts","getAllProducts","subscribe","data","products$","loading","ngOnInit","localToken","localStorage","getItem","RefreshRequired","response","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/leom/Desktop/openfabric-angular-test/frontend/src/app/components/products/products.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { AppServiceService } from 'src/app/service/app-service.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HotToastService } from '@ngneat/hot-toast';\n\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n})\nexport class ProductsComponent implements OnInit {\n  products$: any;\n  loading = false;\n  localToken!: string | null;\n  p_id!: string;\n  p_name!: string;\n  p_price!: number;\n  p_desc!: string;\n  displayAddProductModal: boolean = false; //display button when user records exists in db\n  displayEditProductModal: boolean = false;\n  displayDeleteProductModal: boolean = false;\n\n\n  constructor( \n    private api: AppServiceService,\n    private router: Router,\n    private toast: HotToastService\n    ){}\n\n\n\n\n  // toggle 'add product' modal\n  addProductModal(value: boolean){ \n    this.displayAddProductModal = value;\n  }\n\n // toggle 'edit product' modal \n  showEditModal(id: string, name: string, price: number, description: string){\n    this.displayEditProductModal = true;\n    this.p_id = id;\n    this.p_name = name;\n    this.p_price = price;\n    this.p_desc = description;\n  }\n  closeEditModal(){\n    this.displayEditProductModal = false;\n    this.p_id = '';\n    this.p_name = '';\n    this.p_price = 0;\n    this.p_desc = '';\n  }\n  \n\n  // toggle 'delete product' modal\n  showDeleteModal(id: string, name: string){\n    this.displayDeleteProductModal = true;\n    this.p_id = id;\n    this.p_name = name;\n  }\n  closeDeleteModal(){\n    this.displayDeleteProductModal = false;\n    this.p_id = '';\n    this.p_name = '';\n  }\n\n\n\n  getProducts(){\n    this.api.getAllProducts().subscribe(data => {\n      this.products$ = data\n      this.loading = false;\n    })\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.localToken = localStorage.getItem('user_token');\n\n    this.getProducts();\n    this.api.RefreshRequired.subscribe(response => {\n      this.getProducts();\n    })\n\n    \n\n  }\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}