{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InterceptorService {\n  constructor() {}\n  intercept(req, next) {\n    const token = localStorage.getItem('user_token');\n    req.clone({\n      headers: req.headers.set('Authorization', 'bearer ' + token)\n    });\n    return next.handle(req);\n  }\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)();\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,eAAgB;EAEhBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChDJ,GAAG,CAACK,KAAK,CAAC;MAAEC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGL,KAAK;IAAC,CAAE,CAAC;IAC3E,OAAOD,IAAI,CAACO,MAAM,CAACR,GAAG,CAAC;EAGzB;;AAVWH,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAY,SAAlBZ,kBAAkB;EAAAa,YAFjB;AAAM","names":["InterceptorService","constructor","intercept","req","next","token","localStorage","getItem","clone","headers","set","handle","factory","providedIn"],"sourceRoot":"","sources":["/Users/leom/Desktop/openfabric-angular-test/frontend/src/app/interceptor/interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpHandler, HttpRequest, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('user_token');\n    req.clone({ headers: req.headers.set('Authorization', 'bearer ' + token) })\n    return next.handle(req)\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}